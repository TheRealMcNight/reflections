How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It reduced the time needed to review the code as the different versions were both on a side by side comparison.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will now take less time to review and find mistakes in your code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    A pro is that you'll have more flexibility. A con is that you'll have to make judgement calls on when to commit, this will lead to human error.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

This is because Git is built with programmers in mind, and as programmers their typical workspace includes more than one file.
    
How can you use the commands git log and git diff to view the history of files?

    It shows you the date and time the commits were made, as well as who made those commits.

How might using version control make you more confident to make changes that
could break something?

    You'll always have the previous working version to revert back to.

Now that you have your workspace set up, what do you want to try using Git for?

    Coding.
